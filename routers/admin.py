from datetime import datetime

import aiogram
from aiogram import Router, types, F

from middleware import CheckIsAdminMiddleware, CheckPrivateMessageMiddleware
from settings import settings
from database import service as db
import routers.keyboards as kb
from routers.utils import create_or_update_operation_and_subscribe, generate_invite_link

router = Router()
router.message.middleware.register(CheckPrivateMessageMiddleware())
router.message.middleware.register(CheckIsAdminMiddleware(settings.admins))


# BLOCK OTHER TYPES
@router.message(~F.content_type.in_({'text', 'pre_checkout_query', 'successful_payment'}))
async def block_types_handler(message: types.Message) -> None:
    await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)\n\n"
                         "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –≤–æ –≤–∫–ª–∞–¥–∫–µ \"–ú–µ–Ω—é\" "
                         "–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –ø—Ä—è–º–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")


@router.callback_query(lambda callback: callback.data.split('_')[0] == "admin")
async def create_invoice_handler(callback: types.CallbackQuery, bot: aiogram.Bot) -> None:
    """–í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã"""
    payer_tg_id = callback.data.split("_")[2]
    period = callback.data.split("_")[3]
    payment_status = callback.data.split("_")[1]

    if period == "1":
        months = settings.months_1
        amount = settings.amount_1
    elif period == "3":
        months = settings.months_3
        amount = settings.amount_3
    else:
        months = settings.months_inf
        amount = settings.amount_inf

    # –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –û–ü–õ–ê–¢–´
    if payment_status == "ok":
        # —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        subscription, need_link = create_or_update_operation_and_subscribe(payer_tg_id, months, amount)

        # —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ (–≤ —Å–ª—É—á–∞–µ –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∏—Å—Ç–µ–∫—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏)
        if need_link:
            # —Å–æ–∑–¥–∞–Ω–∏–µ invite —Å—Å—ã–ª–∫–∏
            name = callback.message.from_user.username if callback.message.from_user.username else callback.message.from_user.first_name
            invite_link = await generate_invite_link(bot, name)

            # –¥–ª—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
            if subscription.is_infinity:
                user_message = f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚úÖ\n–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ <b>–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</b>Ô∏è ‚ôæÔ∏è\n\n" \
                               "<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∞–∫—Ç–∏–≤–Ω–∞ 1 –¥–µ–Ω—å –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑</b>"
            # –¥–ª—è –æ–±—ã—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
            else:
                user_message = f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚úÖ\n–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ <b>{datetime.strftime(subscription.expire_date, '%d.%m.%Y')}</b> üóìÔ∏è\n\n"\
                               "<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∞–∫—Ç–∏–≤–Ω–∞ 1 –¥–µ–Ω—å –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑</b>"

            # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await bot.send_message(payer_tg_id, user_message, reply_markup=kb.invite_link_keyboard(invite_link).as_markup())

            # —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            admin_message = f"–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ ‚úÖ\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"

        # –±–µ–∑ —Å—Å—ã–ª–∫–∏ (–≤ —Å–ª—É—á–∞–µ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏)
        else:
            # –¥–ª—è –±–µ—Å—Å—Ä–æ—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
            if subscription.is_infinity:
                user_message = f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚úÖ\n–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –Ω–∞ <b>–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥</b>Ô∏è ‚ôæÔ∏è"

            # –¥–ª—è –æ–±—ã—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
            else:
                user_message = f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚úÖ\n–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ <b>{datetime.strftime(subscription.expire_date, '%d.%m.%Y')}</b> üóìÔ∏è"

            # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±–µ–∑ —Å—Å—ã–ª–∫–∏ (—Ç.–∫. –µ–≥–æ –ø–æ–¥–ø–∏—Å–∫–∞ –µ—â–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏ –æ–Ω –≤ –∫–∞–Ω–∞–ª–µ)
            await bot.send_message(payer_tg_id, user_message)

            # —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            admin_message = "–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ ‚úÖ\n–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∞"

    # –û–¢–ö–õ–û–ù–ï–ù–ò–ï –û–ü–õ–ê–¢–´
    else:
        # —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        user_message = f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–ø–ª–∞—Ç—É –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª ‚ùå\n\n" \
                       f"–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∫–∞–Ω–∞–ª–∞\n{settings.support_contact}"
        await bot.send_message(payer_tg_id, user_message)

        # —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        admin_message = "–û–ø–ª–∞—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ ‚ùå\n–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"

    # –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    await callback.message.edit_text(callback.message.text)
    await callback.message.answer(admin_message)

